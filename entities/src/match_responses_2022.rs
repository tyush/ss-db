//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "match_responses_2022")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub author: i32,
    pub timestamp: i32,
    pub match_type: i32,
    pub number: i32,
    pub team_number: i32,
    pub preload: i32,
    pub pick_from_field: i32,
    pub taxi: i32,
    pub auto_shots: i32,
    pub auto_upper_hub: i32,
    pub auto_lower_hub: i32,
    pub teleop_shots: i32,
    pub teleop_upper_hub: i32,
    pub teleop_lower_hub: i32,
    pub got_pinned: i32,
    pub did_pin: i32,
    pub climb: i32,
    pub did_fall: i32,
    pub red_score: i32,
    pub blue_score: i32,
    pub comments: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
